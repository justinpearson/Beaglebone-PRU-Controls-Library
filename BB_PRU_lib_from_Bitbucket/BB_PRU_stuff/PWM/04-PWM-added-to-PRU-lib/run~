#!/bin/bash

# set -x
set -e

echo "I'm in: "
echo `pwd`

#echo " building jadcpwmeqep.o"
#gcc -std=gnu99 -g -Wall -Werror -pthread -lstdc++ -std=gnu99  -c jadcpwmeqep.c


# .p: PRU code
# .c: PRU lib implementation







EQEP_DIR=/sys/devices/ocp.3/48302000.epwmss/48302180.eqep/
if [ -d "$EQEP_DIR" ]; then
    # Control will enter here if $DIRECTORY exists.
    echo "Resetting eqep..."
    echo 0 > $EQEP_DIR"position"
else
    echo "EQEP dir not found; are you aware that you may be compiling on a non-BB?"
fi



echo "=========================="
echo "building PRU C library..."

echo "------------------------"

echo "Using pasm to assemble .p file $pfile into .bin file $binfile..."

name=jpp-pru-lib
pfile=$name.p

pasm -b $pfile

echo "~~~~~~~~~~~~~~~~~"

binfile=$name.bin
clibfile=$name.c
olibfile=$name.o

echo "Compiling .c file $clibfile into .o file $olibfile"

gcc -Wall -std=gnu99 -g -Wall -Werror -pthread -lstdc++ -std=gnu99 -c $clibfile


echo "~~~~~~~~~~~~~~~~~~~~~~~~~~"

#testname=test0-get-data
#testname=test1-get-data-fast
#testname=test2-gpio-tests
#testname=test3-drive-motor
#testname=test4-sysid
#testname=test5-calibrate-sensors
#testname=test6-chirp
#testname=test7-david-chirp
#testname=20160729_T5_L3_Ts8_4V-pru
#testname=09_10_2016_V4_final
#testname=20160913_V4_future_u
#testname=20160914_T32_V4_future_u
#testname=20160914_T32_V4_future_u-with-sensors
#testname=x0-hack2-20160914
testname=20160915_Ts0008_S5L5T10
ctestfile=$testname.c
exefile=$testname

echo "Building test .c file $ctestfile to make $exefile"

# echo "(Careful - does your .c load the correct .p / .bin?)"

# use -std=c99 to permit for( int i=0
# without this you get: ‘for’ loop initial declarations are only allowed in C99 mode
# Or: -std=gnu99 and usleep. gnu99 and nanosleep no work.

# -lm: needed for fmod in angle wrap alg
#        http://stackoverflow.com/questions/11336477/gcc-will-not-properly-include-math-h

# -lprussdrv : PRU livs
# -lrt: clock_gettime( CLOCK_REALTIME , )
# -lpthread : threading stuff? prob not needed.
#gcc -Wall -std=gnu99 -lm -g $ctestfile $olibfile -o $exefile -lprussdrv -lrt


date
gcc -g -Wall -Werror -Wno-unused-variable -Wno-unused-result  -lstdc++ -std=gnu99 -O0 -DNDEBUG -lprussdrv -lrt -lm  $ctestfile $olibfile -o $exefile 
date



#echo "Running $exefile"
#./$exename

#necho "Running $exefile at realtime priority:"
#chrt 20 ./$exefile


#echo "Making nicer data file..."
#cat sysid-data-david-chirp.txt | cut -d" " -f2- | sort -n | uniq > sysid-data-david-chirp-nice.txt

